= 修改Android语言 =

%toc

== ANDROID语言包 ==
- Android 使用的语言包就是ICU4C，位置：external/icu4c。Android支持的语言有： 

{{{class="brush:text"
Locale CANADA
Locale constant for en_CA.
Locale CANADA_FRENCH
Locale constant for fr_CA.
Locale CHINA
Locale constant for zh_CN.
Locale CHINESE
Locale constant for zh.
Locale ENGLISH
Locale constant for en.
Locale FRANCE
Locale constant for fr_FR.
Locale FRENCH
Locale constant for fr.
Locale GERMAN
Locale constant for de.
Locale GERMANY
Locale constant for de_DE.
Locale ITALIAN
Locale constant for it.
Locale ITALY
Locale constant for it_IT.
Locale JAPAN
Locale constant for ja_JP.
Locale JAPANESE
Locale constant for ja.
Locale KOREA
Locale constant for ko_KR.
Locale KOREAN
Locale constant for ko.
Locale PRC
Locale constant for zh_CN.
Locale SIMPLIFIED_CHINESE
Locale constant for zh_CN.
Locale TAIWAN
Locale constant for zh_TW.
Locale TRADITIONAL_CHINESE
Locale constant for zh_TW.
Locale UK
Locale constant for en_GB.
Locale US
Locale constant for en_US
}}}

== 定制语言 ==
- 定制语言在PRODUCT_LOCALES字段里添加需要语言，如：PRODUCT_LOCALES := en_US zh_CN，则系统里只有英语和汉语两种语言。
- 语言的选择处理是在external/icu4c/stubdata/Android.mk

{{{class="brush:bash"
config := $(word 1, \
    $(if $(findstring ar,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring da,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring el,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring fi,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring he,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring hr,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring hu,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring id,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring ko,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring nb,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring pt,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring ro,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring ru,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring sk,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring sr,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring sv,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring th,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring tr,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring uk,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring zh,$(PRODUCT_LOCALES)),large) \
    $(if $(findstring ja,$(PRODUCT_LOCALES)),us-japan) \
    $(if $(findstring it,$(PRODUCT_LOCALES)),us-euro) \
    $(if $(findstring pl,$(PRODUCT_LOCALES)),us-euro) \
    $(if $(findstring cs,$(PRODUCT_LOCALES)),default) \
    $(if $(findstring de,$(PRODUCT_LOCALES)),default) \
    $(if $(findstring fr,$(PRODUCT_LOCALES)),default) \
    $(if $(findstring nl,$(PRODUCT_LOCALES)),default) \
    us)
}}}

== 默认语言处理 ==
- 默认语言的选择实现是在build/core/Makefile里，从PRODUCT_LOCALES里选择第一个语言作为默认语言，如下：

{{{class="brush:bash"
define default-locale $(subst _, , $(firstword $(1)))
endef
# Selects the first locale in the list given as the argument
# and returns the language (or the region)
define default-locale-language $(word 2, 2, $(call default-locale, $(1)))
endef
define default-locale-region $(word 3, 3, $(call default-locale, $(1)))
endef ... PRODUCT_DEFAULT_LANGUAGE="$(call default-locale-language,$(PRODUCT_LOCALES))" /
PRODUCT_DEFAULT_REGION="$(call default-locale-region,$(PRODUCT_LOCALES))"
}}}

- 然后通过build/tool/buildinfo.sh文件将如下段写到文件build.prop，如下：

{{{class="brush:bash"
echo "ro.product.locale.language=$PRODUCT_DEFAULT_LANGUAGE"
echo "ro.product.locale.region=$PRODUCT_DEFAULT_REGION"
}}}

== 更改语言 ==
- 在PRODUCT_LOCALES字段里，将要选择的语言放在第一位，如：

{{{class="brush:bash"
# 默认语言是英语；
PRODUCT_LOCALES := en_US zh_CN 
}}}

- 在persist.sys.language和persist.sys.country里指定语言，如：

{{{class="brush:bash"
PRODUCT_PROPERTY_OVERRIDES := \
    persist.sys.language=zh \
    persist.sys.country=CN
}}}

== 多语言定制的实现步骤 ==
- 进入build/target/product目录，在languages_full.mk或languages_small.mk文件中，修改PRODUCT_LOCALES的值，来定制语言。比如：

{{{class="brush:bash"
PRODUCT_LOCALES := en_US zh_CN zh_TW en_GB fr_FR it_IT de_DE es_ES
}}}

- 相同目录下，修改full.mk文件的
- 在build/target/product/AndroidProducts.mk中继承languages_full或languages_small

{{{class="brush:bash"
# 可用if语句来切换所使用的文件;
$(call inherit-product, build/target/product/languages_small.mk)
# 或
$(call inherit-product, build/target/product/languages_full.mk)
}}}

- 重新编译
